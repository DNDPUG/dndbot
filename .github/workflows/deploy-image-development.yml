name: Deploy with Docker Compose

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          # Check that required secrets are present (without revealing values)
          if [ -z "${{ secrets.DEV_BLIZZARD_CLIENT_ID }}" ]; then
            echo "‚ùå DEV_BLIZZARD_CLIENT_ID secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.DEV_BLIZZARD_CLIENT_SECRET }}" ]; then
            echo "‚ùå DEV_BLIZZARD_CLIENT_SECRET secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.DEV_DISCORD_BOT_TOKEN }}" ]; then
            echo "‚ùå DEV_DISCORD_BOT_TOKEN secret is missing"
            exit 1
          fi
          echo "‚úÖ All required secrets are present"

      - name: Deploy with Docker Compose
        env:
          BLIZZARD_CLIENT_ID: ${{ secrets.DEV_BLIZZARD_CLIENT_ID }}
          BLIZZARD_CLIENT_SECRET: ${{ secrets.DEV_BLIZZARD_CLIENT_SECRET }}
          DISCORD_BOT_TOKEN: ${{ secrets.DEV_DISCORD_BOT_TOKEN }}
          CHARACTER_URL: ${{ vars.CHARACTER_URL }}
          MYTHIC_PROFILE_URL: ${{ vars.MYTHIC_PROFILE_URL }}
          OAUTH_URL: ${{ vars.OAUTH_URL }}
          PVP_PROFILE_URL: ${{ vars.PVP_PROFILE_URL }}
        run: |
          echo "üöÄ Starting deployment..."
          docker-compose down --remove-orphans || true
          docker-compose up -d

      - name: Wait for services
        run: |
          echo "‚è≥ Waiting for services to be ready..."
          sleep 30

      - name: Check service health
        run: |
          echo "üîç Checking service status..."
          docker-compose ps
          echo "üìã Recent logs:"
          docker-compose logs --tail=50

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "üßπ Cleaning up failed deployment..."
          docker-compose down --remove-orphans
